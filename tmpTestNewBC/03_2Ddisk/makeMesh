#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

cd ${0%/*} || exit 1    # create mesh from stl files with snappyHex

blockMesh -dict system/box.blockMeshDict 2>&1 \
    | tee log.blockMeshBox 2>&1

surfaceFeatureExtract 2>&1 | tee log.surfaceFeatureExtract 2>&1

rm log.snappyHexMesh

if [ $1 -eq 1 ]; then
    echo "Running snappyHexMesh in serial"
    snappyHexMesh -overwrite 2>&1 | tee log.snappyHexMesh 2>&1
else
    echo "Running snappyHexMesh in parallel with $1 processors"
    if [ ! -d "processor0" ]; then
        cat system/decomposeParDict.template \
            | sed "/sub/s//$1/" > system/decomposeParDict
        decomposePar -copyUniform 2>&1 | tee log.decompose
    fi

    runParallel snappyHexMesh -overwrite

    runApplication reconstructParMesh -constant
fi

rm -r processor*

#decomposePar
#runParallel snappyHexMesh -overwrite
#runParallel snappyHexMesh -overwrite 2>&1 | tee log.snappyHexMesh
#snappyHexMesh -overwrite 2>&1 | tee log.snappyHexMesh 2>&1
#runApplication reconstructParMesh -constant

extrudeMesh 2>&1 | tee log.extrudeMesh 2>&1
transformPoints -translate '(0 0 -1)'   # transform points to 0 < z < 1/2

orderBoundaries -overwrite 2>&1 | tee log.orderboundaries

checkMesh -allGeometry -allTopology -constant -noZero 2>&1 \
    | tee log.checkMesh 2>&1

# ------------------------------------------------------------------- #
